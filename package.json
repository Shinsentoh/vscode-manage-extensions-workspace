{
  "name": "vscode-manage-extensions-workspaces",
  "displayName": "MEW - Workspace Extensions Manager",
  "description": "Create as many bundle as you want for your extensions, then select one or many to enable all those extensions for a project or a workspace.",
  "publisher": "shinsentoh",
  "version": "0.1.1",
  "preview": true,
  "icon": "assets/images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Shinsentoh/vscode-manage-extensions-workspace"
  },
  "bug": {
    "url": "https://github.com/Shinsentoh/vscode-manage-extensions-workspace/issues"
  },
  "author": {
    "name": "Shinsentoh",
    "url": "https://github.com/Shinsentoh"
  },
  "license": "SEE LICENSE IN LICENSE",
  "categories": [
    "Other"
  ],
  "keywords": [
    "profile",
    "extension",
    "manager",
    "workspace",
    "bundles"
  ],
  "extensionKind": [
    "ui"
  ],
  "main": "./dist/extension.js",
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false,
      "description": ""
    }
  },
  "activationEvents": [
    "onCommand:mew.bundle.create",
    "onCommand:mew.extension.enable",
    "onCommand:mew.extension.select",
    "onCommand:mew.bundle.create",
    "onCommand:mew.bundle.edit",
    "onCommand:mew.bundle.delete",
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "mew.extension.select",
        "title": "Select bundles",
        "category": "MEW",
        "shortTitle": "Select bundles"
      },
      {
        "command": "mew.bundle.create",
        "title": "Create bundle",
        "category": "MEW",
        "shortTitle": "Create bundle"
      },
      {
        "command": "mew.bundle.edit",
        "title": "Edit bundle",
        "category": "MEW",
        "shortTitle": "Edit bundle"
      },
      {
        "command": "mew.bundle.delete",
        "title": "Delete bundle",
        "category": "MEW",
        "shortTitle": "Delete bundle"
      },
      {
        "command": "mew.extension.disable",
        "title": "Disable (bundle)",
        "category": "MEW",
        "shortTitle": "Disable (bundle)"
      },
      {
        "command": "mew.extension.enable",
        "title": "Enable (bundle)",
        "category": "MEW",
        "shortTitle": "Enable (bundle)"
      }
    ],
    "menus": {
      "extension/context": [
        {
          "when": "extensionStatus == installed && workbenchState != empty",
          "command": "mew.extension.enable",
          "group": "navigation"
        },
        {
          "when": "extensionStatus == installed && workbenchState != empty",
          "command": "mew.extension.disable",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "when": "false",
          "command": "mew.extension.enable"
        },
        {
          "when": "false",
          "command": "mew.extension.disable"
        }
      ]
    },
    "configuration": {
      "title": "MEW",
      "properties": {
        "mew.ignoredListExtensions": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "pattern": "^[a-z0-9-]+\\.[a-z0-9-]+[a-z]+$",
            "patternErrorMessage": "must follow the pattern `publisher.extension-name`. To find it you can right-click on the extension in the Extension panel and select 'Copy Extension Id'."
          },
          "scope": "window",
          "markdownDescription": "You won't be able to pick them for a bundle, their state won't be changed.",
          "minItems": 0,
          "uniqueItems": true
        },
        "mew.ignoreRemoteExtensions": {
          "type": "boolean",
          "default": false,
          "scope": "window",
          "markdownDescription": "Ignore VS Code Remote extensions. merged into the above ignoredList for:\n- `ms-vscode-remote.remote-ssh`\n - `ms-vscode-remote.remote-ssh-edit`\n - `ms-vscode-remote.remote-wsl`\n - `ms-vscode-remote.remote-container`"
        },
        "mew.extensions.autoAdd": {
          "type": "string",
          "default": "Ask you",
          "enum": ["Ask you", "Keep calm & sleep", "Auto-edit all active", "Let you select bundle(s)"],
          "enumDescriptions": [
            "Prompt 'Which bundle(s) should MEW add the extension ${extensionName} to ? 'Don't ask me again', 'All active' and 'Select', 'None'",
            "Let MEW sleeps and do nothing. No Prompt",
            "Add the extension to all current active bundles automatically. No prompt",
            "Select the bundle(s) where you want to add the new extension."
          ],
          "scope": "window",
          "markdownDescription": "Whenever an extension is installed, what should MEW do with it ?"
        },
        "mew.extensions.autoRemove": {
          "type": "string",
          "default": "Ask you",
          "enum": ["Ask you", "Keep calm & sleep", "Auto-edit all active", "Let you select bundle(s)"],
          "enumDescriptions": [
            "Prompt 'Which bundle(s) should MEW remove the extension ${extensionName} from ? 'Don't ask me again', 'All active' and 'Select', 'None'",
            "Let MEW sleeps. No Prompt",
            "Remove the extension from all current active bundles automatically. No prompt",
            "Select the bundle(s) where you want to remove the extension."
          ],
          "scope": "window",
          "markdownDescription": "Whenever an extension is uninstalled, what should MEW do with it ?"
        },
        "mew.workspace.autoLoad": {
          "type": "string",
          "default": "Ask you",
          "enum": ["Ask you", "Keep calm & sleep", "Always do it"],
          "enumDescriptions": [
            "Prompt: 'Some extensions to load were found inside the .mewrc.json, What should MEW do with it ?', Actions: 'Don't ask me again', 'Always load them', 'Load them & keep asking me'",
            "Let MEW sleeps. No future prompts.",
            "Always load extensions when opening a workspace or a folder. No future prompts."
          ],
          "scope": "window",
          "markdownDescription": "When a .mewrc.json is found in the current workspace/folder, what should MEW do about loading those extensions ?"
        },
        "mew.workspace.autoInstall": {
          "type": "string",
          "default": "Ask you",
          "enum": ["Ask you", "Keep calm & sleep", "Always do it"],
          "enumDescriptions": [
            "Prompt: 'Some extensions listed inside the .mewrc.json aren't installed yet, Whatd should MEW do with it ?', Actions: 'Don't ask me again', 'Always Install them', 'Install them & keep asking me'",
            "Let MEW sleeps. No future prompts",
            "Always install missing extensions when opening a workspace or a folder. No future prompts."
          ],
          "scope": "window",
          "markdownDescription": "When a .mewrc.json is found in the current workspace/folder, what should MEW do about installing those missing extensions ?"
        }
      }
    }
  },
  "scripts": {
    "version": "auto-changelog -p && git add CHANGELOG.md",
    "vscode:prepublish": "webpack --mode production",
    "prod": "webpack --mode production",
    "compile": "webpack --mode production && yarn test-compile",
    "watch": "webpack --mode development && tsc -watch -p ./",
    "dev": "webpack --mode development",
    "test-compile": "tsc -p ./",
    "pretest": "yarn test-compile && yarn lint",
    "lint": "eslint src --ext ts",
    "test": "jest"
  },
  "devDependencies": {
    "@types/jest": "^26.0.24",
    "@types/node": "16.x",
    "@types/node-fetch": "^2.5.12",
    "@types/sqlite3": "^3.1.7",
    "@types/tar": "^4.0.5",
    "@types/vscode": "^1.57.0",
    "@types/webpack": "^5.28.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "auto-changelog": "^2.3.0",
    "copy-webpack-plugin": "^9.0.1",
    "eslint": "^7.27.0",
    "jest": "^27.0.6",
    "jest-cli": "^27.0.6",
    "ts-jest": "^27.0.4",
    "ts-loader": "^9.2.5",
    "ts-node": "^10.1.0",
    "typescript": "^4.3.5",
    "vscode-nls-i18n": "^0.2.4",
    "vscode-test": "^1.6.1",
    "webpack": "^5.50.0",
    "webpack-cli": "^4.7.2",
    "webpack-plugin-replace": "^1.2.0"
  },
  "dependencies": {
    "node-fetch": "^2.6.1",
    "reflect-metadata": "^0.1.13",
    "sqlite3": "https://github.com/mapbox/node-sqlite3.git#3fb3715c4e699ca3bc19e47b136758c66f61e477",
    "tar": "^6.1.2",
    "typedi": "^0.10.0"
  },
  "engines": {
    "vscode": "^1.57.0"
  }
}
